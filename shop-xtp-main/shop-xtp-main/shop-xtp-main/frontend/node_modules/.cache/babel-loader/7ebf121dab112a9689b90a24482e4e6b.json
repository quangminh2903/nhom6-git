{"ast":null,"code":"import { Http } from \"./http.js\";\nconst API_ENDPOINT = {\n  LIST_PRODUCT: \"/product/product/list\",\n  GET_PRODUCT: \"/product/product/get\",\n  UPDATE_PRODUCT: \"/product/product/update\",\n  DELETE_PRODUCT: \"/product/product/delete\",\n  CREATE_PRODUCT: \"/product/product/create\",\n  LIST_CUSTOMER: \"/customer/customer/list\",\n  UPDATE_CUSTOMER: \"/customer/customer/update\",\n  GET_CUSTOMER: \"/customer/customer/get\",\n  GET_ORDER: \"/order/order/list?status=new\",\n  CREATE_ORDER: \"/order/order/create\",\n  GET_ORDER_AWAIT: \"/order/order/list?status=await\",\n  GET_ORDER_VIEW: \"/order/order/get\",\n  GET_ORDER_CANCEL: \"/order/order/list?status=cancel\",\n  GET_ORDER_DONE: \"/order/order/list?status=done\",\n  UPDATE_ORDER: \"/order/order/update\",\n  GET_LIST_ORDER_CUSTOMER: \"/order/order/list\",\n  LIST_SALE: \"/product/product/sale\",\n  GET_COMMENT: \"/product/comment/list\",\n  CREATE_COMMENT: \"/product/comment/create\",\n  SET_PASSWORD: \"/auth/customer/set_password\",\n  GET_LOGIN: \"/auth/login\",\n  CREATE_CUSTOMER: \"/customer/customer/create\",\n  SEND_EMAIL: \"/mail/mail/send\"\n};\n\nclass TransactionService {\n  constructor() {\n    if (TransactionService._instance) {\n      return TransactionService._instance;\n    }\n\n    TransactionService._instance = this; // ... Your rest of the constructor code goes after this\n  }\n\n  getListProduct() {\n    return Http.get(API_ENDPOINT.LIST_PRODUCT);\n  }\n\n  getListCustomer() {\n    return Http.get(API_ENDPOINT.LIST_CUSTOMER);\n  }\n\n  getProduct(id) {\n    return Http.get(API_ENDPOINT.GET_PRODUCT + `?id=${id}`);\n  }\n\n  getOrder(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER + `&customer_id=${id}`);\n  }\n\n  getOrderView(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_VIEW + `?id=${id}`);\n  }\n\n  getOrderDone() {\n    return Http.get(API_ENDPOINT.GET_ORDER_DONE);\n  }\n\n  getOrderDone2(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_DONE + `&customer_id=${id}`);\n  }\n\n  getOrderCancel(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_CANCEL + `&customer_id=${id}`);\n  }\n\n  getOrderAwait(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_AWAIT + `&customer_id=${id}`);\n  }\n\n  getListOrderAwait() {\n    return Http.get(API_ENDPOINT.GET_ORDER_AWAIT);\n  }\n\n  getCustomer(id) {\n    return Http.get(API_ENDPOINT.GET_CUSTOMER + `?id=${id}`);\n  }\n\n  getLogin(payload) {\n    return Http.post(API_ENDPOINT.GET_LOGIN, payload);\n  }\n\n  getComment(id) {\n    return Http.get(API_ENDPOINT.GET_COMMENT + `?product_id=${id}`);\n  }\n\n  getListSale() {\n    return Http.get(API_ENDPOINT.LIST_SALE);\n  }\n\n  getListOrderCustomer(id) {\n    return Http.get(API_ENDPOINT.GET_LIST_ORDER_CUSTOMER + `?status=new&customer_id=${id}`);\n  }\n\n  updateProduct(id, payload) {\n    return Http.post(API_ENDPOINT.UPDATE_PRODUCT + `?id=${id}`, payload);\n  }\n\n  sendEmail(payload) {\n    return Http.post(API_ENDPOINT.SEND_EMAIL, payload);\n  }\n\n  updateCustomer(id, payload) {\n    return Http.post(API_ENDPOINT.UPDATE_CUSTOMER + `?id=${id}`, payload);\n  }\n\n  updateOrder(id, payload) {\n    return Http.post(API_ENDPOINT.UPDATE_ORDER + `?id=${id}`, payload);\n  }\n\n  deleteProduct(id) {\n    return Http.post(API_ENDPOINT.DELETE_PRODUCT + `?id=${id}`);\n  }\n\n  createProduct(payload) {\n    return Http.post(API_ENDPOINT.CREATE_PRODUCT, payload);\n  }\n\n  createComment(payload) {\n    return Http.post(API_ENDPOINT.CREATE_COMMENT, payload);\n  }\n\n  createOrder(payload) {\n    return Http.post(API_ENDPOINT.CREATE_ORDER, payload);\n  }\n\n  setPassword(payload) {\n    return Http.post(API_ENDPOINT.SET_PASSWORD, payload);\n  }\n\n  createCustomer(payload) {\n    return Http.post(API_ENDPOINT.CREATE_CUSTOMER, payload);\n  }\n\n}\n\nconst Service = new TransactionService();\nexport default Service;","map":{"version":3,"sources":["C:/Users/Admin/Downloads/shop-xtp-main/shop-xtp-main/frontend/src/components/api/shopService.js"],"names":["Http","API_ENDPOINT","LIST_PRODUCT","GET_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","CREATE_PRODUCT","LIST_CUSTOMER","UPDATE_CUSTOMER","GET_CUSTOMER","GET_ORDER","CREATE_ORDER","GET_ORDER_AWAIT","GET_ORDER_VIEW","GET_ORDER_CANCEL","GET_ORDER_DONE","UPDATE_ORDER","GET_LIST_ORDER_CUSTOMER","LIST_SALE","GET_COMMENT","CREATE_COMMENT","SET_PASSWORD","GET_LOGIN","CREATE_CUSTOMER","SEND_EMAIL","TransactionService","constructor","_instance","getListProduct","get","getListCustomer","getProduct","id","getOrder","getOrderView","getOrderDone","getOrderDone2","getOrderCancel","getOrderAwait","getListOrderAwait","getCustomer","getLogin","payload","post","getComment","getListSale","getListOrderCustomer","updateProduct","sendEmail","updateCustomer","updateOrder","deleteProduct","createProduct","createComment","createOrder","setPassword","createCustomer","Service"],"mappings":"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","sourcesContent":["import { Http } from \"./http.js\";\n\nconst API_ENDPOINT = {\n  LIST_PRODUCT: \"/product/product/list\",\n  GET_PRODUCT: \"/product/product/get\",\n  UPDATE_PRODUCT: \"/product/product/update\",\n  DELETE_PRODUCT: \"/product/product/delete\",\n  CREATE_PRODUCT:\"/product/product/create\",\n\n  LIST_CUSTOMER: \"/customer/customer/list\",\n  UPDATE_CUSTOMER: \"/customer/customer/update\",\n  GET_CUSTOMER: \"/customer/customer/get\",\n  \n  GET_ORDER: \"/order/order/list?status=new\",\n  CREATE_ORDER:\"/order/order/create\",\n  GET_ORDER_AWAIT:\"/order/order/list?status=await\",\n  GET_ORDER_VIEW: \"/order/order/get\",\n  GET_ORDER_CANCEL:\"/order/order/list?status=cancel\",\n  GET_ORDER_DONE:\"/order/order/list?status=done\",\n  UPDATE_ORDER:\"/order/order/update\",\n  GET_LIST_ORDER_CUSTOMER:\"/order/order/list\",\n  \n  LIST_SALE: \"/product/product/sale\",\n  GET_COMMENT: \"/product/comment/list\",\n  CREATE_COMMENT:\"/product/comment/create\",\n  \n  SET_PASSWORD:\"/auth/customer/set_password\",\n  GET_LOGIN: \"/auth/login\",\n  CREATE_CUSTOMER:\"/customer/customer/create\",\n  SEND_EMAIL:\"/mail/mail/send\"\n};\nclass TransactionService {\n  constructor() {\n    if (TransactionService._instance) {\n      return TransactionService._instance;\n    }\n    TransactionService._instance = this;\n\n    // ... Your rest of the constructor code goes after this\n  }\n  getListProduct() {\n    return Http.get(API_ENDPOINT.LIST_PRODUCT);\n  }\n  getListCustomer() {\n    return Http.get(API_ENDPOINT.LIST_CUSTOMER);\n  }\n  getProduct(id) {\n    return Http.get(API_ENDPOINT.GET_PRODUCT + `?id=${id}`);\n  }\n  getOrder(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER + `&customer_id=${id}`);\n  }\n  getOrderView(id) {\n    return Http.get(API_ENDPOINT.GET_ORDER_VIEW + `?id=${id}`);\n  }\n  getOrderDone(){\n    return Http.get(API_ENDPOINT.GET_ORDER_DONE);\n  }\n  getOrderDone2(id){\n    return Http.get(API_ENDPOINT.GET_ORDER_DONE+`&customer_id=${id}`);\n  }\n  getOrderCancel(id){\n    return Http.get(API_ENDPOINT.GET_ORDER_CANCEL+`&customer_id=${id}`);\n  }\n  getOrderAwait(id){\n    return Http.get(API_ENDPOINT.GET_ORDER_AWAIT+`&customer_id=${id}`);\n  }\n  getListOrderAwait(){\n    return Http.get(API_ENDPOINT.GET_ORDER_AWAIT);\n  }\n  getCustomer(id) {\n    return Http.get(API_ENDPOINT.GET_CUSTOMER + `?id=${id}`);\n  }\n  getLogin(payload) {\n    return Http.post(API_ENDPOINT.GET_LOGIN, payload);\n  }\n  getComment(id) {\n    return Http.get(API_ENDPOINT.GET_COMMENT + `?product_id=${id}`);\n  }\n  getListSale() {\n    return Http.get(API_ENDPOINT.LIST_SALE);\n  }\n  getListOrderCustomer(id) {\n    return Http.get(API_ENDPOINT.GET_LIST_ORDER_CUSTOMER+ `?status=new&customer_id=${id}`);\n  }\n  updateProduct(id, payload) {\n    return Http.post(API_ENDPOINT.UPDATE_PRODUCT + `?id=${id}`, payload);\n  }\n  sendEmail(payload) {\n    return Http.post(API_ENDPOINT.SEND_EMAIL, payload);\n  }\n  updateCustomer(id, payload) {\n    return Http.post(API_ENDPOINT.UPDATE_CUSTOMER + `?id=${id}`, payload);\n  }\n  updateOrder(id,payload){\n    return Http.post(API_ENDPOINT.UPDATE_ORDER + `?id=${id}`, payload);\n  }\n  deleteProduct(id) {\n    return Http.post(API_ENDPOINT.DELETE_PRODUCT + `?id=${id}`);\n  }\n  createProduct(payload) {\n    return Http.post(API_ENDPOINT.CREATE_PRODUCT,payload);\n  }\n  createComment(payload) {\n    return Http.post(API_ENDPOINT.CREATE_COMMENT,payload);\n  }\n  createOrder(payload) {\n    return Http.post(API_ENDPOINT.CREATE_ORDER,payload);\n  }\n  setPassword(payload){\n    return Http.post(API_ENDPOINT.SET_PASSWORD,payload);\n  }\ncreateCustomer(payload){\n  return Http.post(API_ENDPOINT.CREATE_CUSTOMER,payload);\n}\n}\n\nconst Service = new TransactionService();\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}